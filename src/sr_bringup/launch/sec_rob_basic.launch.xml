<launch>
  <arg name="urdf_path" default="$(find-pkg-share sr_bringup)/descriptions/security_robot.urdf.xacro" />
  <arg name="rviz_config" default="$(find-pkg-share sr_bringup)/config/rviz_config.rviz" />
  <arg name="gz_world" default="$(find-pkg-share sr_bringup)/worlds/ionic.sdf"/>
  <!-- <let pkg=""/> -->



  <!-- Robot State Publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" exec="robot_state_publisher">
    <param name="robot_description" value="$(command 'xacro $(var urdf_path)')" />
  </node>

  <!-- Joint State Publisher GUI -->
  <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" exec="joint_state_publisher_gui" />

  <!-- RViz2 -->
  <node name="rviz2" pkg="rviz2" exec="rviz2" output="screen">
    <param name="-d" value="rviz_config"/>    
  </node>

  <!-- Gazebo Simulator -->
  <include file="$(find-pkg-share ros_gz_sim)/launch/gz_sim.launch.py">
    <arg name="gz_args" value="$(var gz_world)"/>
  </include>

  <!-- <include file="$(find-pkg-share ros_gz_sim)/launch/ros_gz_spawn_model.launch.py">
    <arg name="world" value="empty.sdf"/>
    <arg name="topic" value="robot_description"/>
    <arg name="z" value="0.5"/>
    <arg name="bridge_name" value="robot_spawn_bridge"/>
  </include> -->
  <include file="$(find-pkg-share ros_gz_sim)/launch/gz_spawn_model.launch.py">
    <!-- <arg name="world" value="empty.sdf"/> -->
    <arg name="topic" value="robot_description"/>
    <arg name="z" value="0.075"/>
  </include>

  <!-- <node pkg="ros_gz_sim" exec="create" args="-topic robot_description" /> -->
  <!-- Bridge the necessary topics -->
  <!-- <node name="ros_gz_bridge" pkg="ros_gz_bridge" exec="parameter_bridge" output="screen" args="
    /joint_states@sensor_msgs/msg/JointState[ignition.msgs.Model
    /tf@tf2_msgs/msg/TFMessage[ignition.msgs.Pose_V
  "/> -->

</launch>
